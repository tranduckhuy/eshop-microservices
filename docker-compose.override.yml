services:
  catalogdb:
    container_name: catalogdb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  basketdb:
    container_name: basketdb
    restart: always
    ports:
      - "6379:6379"

  discountdb:
    container_name: discountdb
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD={password}
      - POSTGRES_DB=DiscountDb
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d DiscountDb"]
      interval: 30s
      timeout: 10s
      retries: 5

  orderdb:
    container_name: orderdb
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD={passwordJC4}
      - MSSQL_PID=Express
    restart: always
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -U sa -P {passwordJC4} -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 5

  identitydb:
    container_name: identitydb
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD={password}
    restart: always
    ports:
      - "5433:5432"
    volumes:
      - identity_data:/var/lib/postgresql/data

  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"

  portainer:
    container_name: portainer
    restart: always
    ports:
      - "8080:8000"
      - "9090:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  catalog.api:
    container_name: catalog.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_Kestrel__Certificates__Default__Password={password}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/localhost.pfx
      - "DatabaseSettings__ConnectionString=mongodb://catalogdb:27017"
      - "DatabaseSettings__DatabaseName=CatalogDb"
      - "DatabaseSettings__CollectionName=Products"
      - "DatabaseSettings__BrandsCollection=Brands"
      - "DatabaseSettings__TypesCollection=Categories"
      - "ElasticConfiguration__Uri=http://elasticsearch:9200"
    depends_on:
      - catalogdb
    ports:
      - "9000:8080"
    entrypoint: /bin/sh -c "update-ca-certificates && dotnet Catalog.API.dll"
    volumes:
      - ./localhost.pfx:/https/localhost.pfx:ro
      - ./localhost.crt:/usr/local/share/ca-certificates/localhost.crt:ro
  basket.api:
    container_name: basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_Kestrel__Certificates__Default__Password={password}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/localhost.pfx
      - "RedisSettings__ConnectionString=basketdb:6379"
      - "GrpcSettings__DiscountUrl=http://discount.api:8080"
      - "EventBusSettings__HostAddress=amqp://guest:guest@rabbitmq:5672"
      - "ElasticConfiguration__Uri=http://elasticsearch:9200"
    depends_on:
      - basketdb
      - discount.api
    ports:
      - "9001:8080"
    entrypoint: /bin/sh -c "update-ca-certificates && dotnet Basket.API.dll"
    volumes:
      - ./localhost.pfx:/https/localhost.pfx:ro
      - ./localhost.crt:/usr/local/share/ca-certificates/localhost.crt:ro

  discount.api:
    container_name: discount.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_Kestrel__Certificates__Default__Password={password}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/localhost.pfx
      - "DatabaseSettings__ConnectionString=Server=discountdb;Port=5432;Database=DiscountDb;Username=admin;Password={password}"
      - "ElasticConfiguration__Uri=http://elasticsearch:9200"
    depends_on:
      discountdb:
        condition: service_healthy
    ports:
      - "9002:8080"
    entrypoint: /bin/sh -c "update-ca-certificates && dotnet Discount.API.dll"
    volumes:
      - ./localhost.pfx:/https/localhost.pfx:ro
      - ./localhost.crt:/usr/local/share/ca-certificates/localhost.crt:ro

  ordering.api:
    container_name: ordering.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_Kestrel__Certificates__Default__Password={password}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/localhost.pfx
      - "ConnectionStrings__OrderingConnectionString=Server=orderdb;Database=OrderDb;User Id=sa;Password={passwordJC4};TrustServerCertificate=True;"
      - "EventBusSettings__HostAddress=amqp://guest:guest@rabbitmq:5672"
      - "ElasticConfiguration__Uri=http://elasticsearch:9200"
    depends_on:
      orderdb:
        condition: service_healthy
    ports:
      - "9003:8080"
    entrypoint: /bin/sh -c "update-ca-certificates && dotnet Ordering.API.dll"
    volumes:
      - ./localhost.pfx:/https/localhost.pfx:ro
      - ./localhost.crt:/usr/local/share/ca-certificates/localhost.crt:ro

  ocelotapigateway:
    container_name: ocelotapigateway
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_Kestrel__Certificates__Default__Password={password}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/localhost.pfx
    depends_on:
      - identityserver
      - catalog.api
      - discount.api
      - basket.api
      - ordering.api
    ports:
      - "9010:8080"
    entrypoint: /bin/sh -c "update-ca-certificates && dotnet Ocelot.ApiGateway.dll"
    volumes:
      - ./localhost.pfx:/https/localhost.pfx:ro
      - ./localhost.crt:/usr/local/share/ca-certificates/localhost.crt:ro

  identityserver:
    container_name: identityserver
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_Kestrel__Certificates__Default__Password={password}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/localhost.pfx
      - "ConnectionStrings__IdentityConnection=Server=identitydb;Port=5433;Database=identity;Username=admin;Password={password}"
      - "ConnectionStrings__IdentityServer=Server=identitydb;Port=5433;Database=identityserver;Username=admin;Password={password}"
    depends_on:
      identitydb
    ports:
      - "9011:8080"
    entrypoint: /bin/sh -c "update-ca-certificates && dotnet EShop.IdentityServer.dll"
    volumes:
      - ./localhost.pfx:/https/localhost.pfx:ro
      - ./localhost.crt:/usr/local/share/ca-certificates/localhost.crt:ro
