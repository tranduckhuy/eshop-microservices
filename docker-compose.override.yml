services:
  nginxgateway:
    container_name: nginxgateway
    restart: unless-stopped
    volumes:
      - ./src/ApiGateways/nginx/nginx.conf/:/etc/nginx/nginx.conf:ro
      - ./src/ApiGateways/nginx/ssl/:/etc/nginx/ssl:ro
    ports:
      - "9010:9010"
    depends_on:
      - catalog.api
      - basket.api
      - discount.api
      - ordering.api
      - identityserver

  catalogdb:
    container_name: catalogdb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - catalog_data:/data/db

  basketdb:
    container_name: basketdb
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - basket_data:/data

  discountdb:
    container_name: discountdb
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=huydz
      - POSTGRES_DB=DiscountDb
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - discount_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d DiscountDb"]
      interval: 30s
      timeout: 10s
      retries: 5

  orderdb:
    container_name: orderdb
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=huydz
      - POSTGRES_DB=OrderDb
    restart: unless-stopped
    ports:
      - "5433:5432"
    volumes:
      - order_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d OrderDb"]
      interval: 30s
      timeout: 10s
      retries: 5

  identitydb:
    container_name: identitydb
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=huydz
    restart: unless-stopped
    ports:
      - "5434:5432"
    volumes:
      - identity_data:/var/lib/postgresql/data

  rabbitmq:
    container_name: rabbitmq
    restart: unless-stopped
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=huydz
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  portainer:
    container_name: portainer
    restart: unless-stopped
    ports:
      - "8080:8000"
      - "9090:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  catalog.api:
    container_name: catalog.api
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings__ConnectionString=mongodb://catalogdb:27017"
      - "DatabaseSettings__DatabaseName=CatalogDb"
      - "DatabaseSettings__CollectionName=Products"
      - "DatabaseSettings__BrandsCollection=Brands"
      - "DatabaseSettings__TypesCollection=Categories"
      - "ElasticConfiguration__Uri=http://elasticsearch:9200"
      - Authentication__Authority=http://identityserver:8080
      - Authentication__PublicAuthority=https://id-local.eshop.com:9010
      - Authentication__Audience=9fc33c2e-dbc1-4d0a-b212-68b9e07b3ba0
      - Authentication__Issuer=https://id-local.eshop.com:9010
    depends_on:
      - catalogdb
      - elasticsearch

  basket.api:
    container_name: basket.api
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "RedisSettings__ConnectionString=basketdb:6379"
      - "GrpcSettings__DiscountUrl=http://discount.api:8080"
      - "EventBusSettings__HostAddress=amqp://admin:huydz@rabbitmq:5672"
      - "ElasticConfiguration__Uri=http://elasticsearch:9200"
      - Authentication__Authority=https://id-local.eshop.com:9010
      - Authentication__Audience=89d1690f-7d79-4a3e-a9b4-8d680ce0efc1
      - Authentication__Issuer=https://id-local.eshop.com:9010
    depends_on:
      - basketdb
      - discount.api
      - rabbitmq
      - elasticsearch

  discount.api:
    container_name: discount.api
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings__ConnectionString=Server=discountdb;Port=5432;Database=DiscountDb;Username=admin;Password=huydz"
      - "ElasticConfiguration__Uri=http://elasticsearch:9200"
    depends_on:
      - discountdb
      - elasticsearch

  ordering.api:
    container_name: ordering.api
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings__OrderingConnectionString=Server=orderdb;Port=5432;Database=OrderDb;Username=admin;Password=huydz"
      - "EventBusSettings__HostAddress=amqp://admin:huydz@rabbitmq:5672"
      - "ElasticConfiguration__Uri=http://elasticsearch:9200"
    depends_on:
      orderdb:
        condition: service_healthy

  # ocelotapigateway:
  #   container_name: ocelotapigateway
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #   depends_on:
  #     - identityserver
  #     - catalog.api
  #     - discount.api
  #     - basket.api
  #     - ordering.api
  #   ports:
  #     - "9010:8080"

  identityserver:
    container_name: identityserver
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings__Identity=Server=identitydb;Port=5432;Database=IdentityDb;Username=admin;Password=huydz"
      - "ConnectionStrings__IdentityServer=Server=identitydb;Port=5432;Database=IdentityServerDb;Username=admin;Password=huydz"
    depends_on:
      - identitydb

  elasticsearch:
    container_name: elasticsearch
    restart: unless-stopped
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  kibana:
    container_name: kibana
    restart: unless-stopped
    environment:
      - "ELASTICSEARCH_URL=http://elasticsearch:9200"
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
